{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SACA,MAAMC,EAAOC,SAASC,cAAc,SACxBD,SAASC,cAAc,UAwCnC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,CAACC,EAASC,KACpCC,YAAW,KACLN,EACFI,EAAQ,sBAERC,EAAO,mBAAmB,GAE3BN,EAAQD,EAAS,G,CA/CtBJ,EAAKK,MAAMQ,MAAQ,IACnBb,EAAKc,KAAKD,MAAQ,IAClBb,EAAKe,OAAOF,MAAQ,EAGtBb,EAAKgB,iBAAiB,UACtB,SAAiBC,GACfA,EAAEC,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAInB,EAAKe,OAAOF,MAAOM,GAAK,EAAG,CAC7C,MAAMf,EAAWe,EACXC,EAAaC,OAAOrB,EAAKK,MAAMQ,OAC/BR,EAAQe,EAAaC,OAAOrB,EAAKc,KAAKD,OAASM,EACxChB,EAAckB,OAAOrB,EAAKc,KAAKD,OAASM,EAAGC,GACrDE,MAAK,KACJC,EAAAzB,GAAS0B,OAAOC,KAAK,CACnBC,KAAM,CACJC,WAAY,aAIhBJ,EAAAzB,GAAS0B,OAAOE,KACd,uBAAqBtB,EAAY,QAASC,MAAU,IAGvDuB,OAAM,KACLL,EAAAzB,GAAS0B,OAAOC,KAAK,CACnBC,KAAM,CACJC,WAAY,aAGhBJ,EAAAzB,GAAS0B,OAAOE,KACd,sBAAoBtB,EAAU,QAASC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\n\nfunction getSettingPromiseDefault() {\n  form.delay.value = 1000;\n  form.step.value = 500;\n  form.amount.value = 1;\n}\ngetSettingPromiseDefault();\nform.addEventListener('submit', onClick);\nfunction onClick(e) {\n  e.preventDefault();\n  for (let i = 0; i < form.amount.value; i += 1) {\n    const position = i;\n    const delayFirst = Number(form.delay.value);\n    const delay = delayFirst + Number(form.step.value) * i;\n    const step = createPromise(Number(form.step.value) * i, delayFirst)\n      .then(() => {\n        Notiflix.Notify.init({\n          info: {\n            background: '#219721',\n          },\n        });\n\n        Notiflix.Notify.info(\n          `✅ Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.init({\n          info: {\n            background: '#e02525',\n          },\n        });\n        Notiflix.Notify.info(\n          `❌ Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promice = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Fulfilled promisek');\n      } else {\n        reject('Rejected promise');\n      }\n    }, delay + position);\n  });\n  return promice;\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","value","step","amount","addEventListener","e","preventDefault","i","delayFirst","Number","then","$parcel$interopDefault","Notify","init","info","background","catch"],"version":3,"file":"03-promises.baca2ccd.js.map"}