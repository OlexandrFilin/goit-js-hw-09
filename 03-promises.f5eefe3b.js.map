{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SACMC,EAAOC,SAASC,cAAc,SACxBD,SAASC,cAAc,UAGjCF,EAAKG,MAAMC,MAAQ,IACnBJ,EAAKK,KAAKD,MAAQ,IAClBJ,EAAKM,OAAOF,MAAQ,EAGtBJ,EAAKO,iBAAiB,UACtB,SAAiBC,G,kBAGb,IAAMC,EAAWC,EACXC,EAAaC,OAAOZ,EAAKG,MAAMC,OAC/BD,EAAQQ,EAAaC,OAAOZ,EAAKK,KAAKD,OAASM,GA0BzD,SAAuBD,EAAUN,GAC/B,IAAMU,EAAgBC,KAAKC,SAAW,GAWtC,OATgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,sBAERC,EAAO,mB,GAERf,EAAQM,E,KAnCEW,CAAcR,OAAOZ,EAAKK,KAAKD,OAASM,EAAGC,GACrDU,MAAK,WACJC,EAAAxB,GAASyB,OAAOC,KAAK,CACnBC,KAAM,CACJC,WAAY,aAIhBJ,EAAAxB,GAASyB,OAAOE,KACd,uBAA4CE,OAAnBlB,EAAW,EAAE,QAAYkB,OAANxB,EAAM,M,IAGrDyB,OAAM,WACLN,EAAAxB,GAASyB,OAAOC,KAAK,CACnBC,KAAM,CACJC,WAAY,aAGhBJ,EAAAxB,GAASyB,OAAOE,KACd,sBAAyCE,OAAnBlB,EAAW,EAAE,QAAYkB,OAANxB,EAAM,M,KAxBvDK,EAAEqB,iBACF,IAAK,IAAIC,EAAI,EAAGA,EAAI9B,EAAKM,OAAOF,MAAO0B,GAAK,EAACC,EAAAD,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nconst form = document.querySelector('.form');\nconst btn = document.querySelector('button');\n\nfunction getSettingPromiseDefault() {\n  form.delay.value = 1000;\n  form.step.value = 500;\n  form.amount.value = 1;\n}\ngetSettingPromiseDefault();\nform.addEventListener('submit', onClick);\nfunction onClick(e) {\n  e.preventDefault();\n  for (let i = 0; i < form.amount.value; i += 1) {\n    const position = i;\n    const delayFirst = Number(form.delay.value);\n    const delay = delayFirst + Number(form.step.value) * i;\n    const step = createPromise(Number(form.step.value) * i, delayFirst)\n      .then(() => {\n        Notiflix.Notify.init({\n          info: {\n            background: '#219721',\n          },\n        });\n\n        Notiflix.Notify.info(\n          `✅ Fulfilled promise ${position + 1} in ${delay}ms`\n        );\n      })\n      .catch(() => {\n        Notiflix.Notify.init({\n          info: {\n            background: '#e02525',\n          },\n        });\n        Notiflix.Notify.info(\n          `❌ Rejected promise ${position + 1} in ${delay}ms`\n        );\n      });\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n\n  const promice = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve('Fulfilled promisek');\n      } else {\n        reject('Rejected promise');\n      }\n    }, delay + position);\n  });\n  return promice;\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","delay","value","step","amount","addEventListener","e","position","i","delayFirst","Number","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","$parcel$interopDefault","Notify","init","info","background","concat","catch","preventDefault","i1","_loop"],"version":3,"file":"03-promises.f5eefe3b.js.map"}